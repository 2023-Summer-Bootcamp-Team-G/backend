events {
    worker_connections 1024;
}

http {
    # 요청 제한을 위한 공유 메모리 영역 정의 1초에 10번 허용
    limit_req_zone $binary_remote_addr zone=limit_per_ip:10m rate=10r/s;

    upstream backend {
        server webapp:8000;
    }

    types {
        # application/javascript js;

        application/javascript js;
        text/css css;
        text/html html;
    }

    server {
        listen 80;
        server_name 1tsme.site;
        charset utf-8;

        # Allow only for register SSL (Certbot)
        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        # 기본적으로 요청된 파일이 존재하지 않는 경우 /index.html로 리다이렉션
        location / {
            # root /var/www/frontend;
            # try_files $uri $uri/ /index.html?q=$uri&$query_string;
            limit_req zone=limit_per_ip burst=1 nodelay;
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        location /assets/ {
            alias /usr/share/nginx/html/assets/;
        }

    }

    server {
        listen 443 ssl;
        server_name 1tsme.site;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/1tsme.site/fullchain.pem; # ssl 인증서 사용
        ssl_certificate_key /etc/letsencrypt/live/1tsme.site/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # i# service-worker.js 파일에 대한 캐시 관련 설정
        location ~* (service-worker\.js)$ {
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires off;
            proxy_no_cache 1;
        }

        location /api/ {
            proxy_pass http://backend;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }

    }

    server {
        listen 80 default_server;
        return 403;
  }

}
