version: '3'

services:
  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - ./nginx:/etc/nginx/conf.d
       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
       - ./nginx/nginx-app.conf:/etc/nginx/sites-available/nginx-app.conf
       - ./certbot/conf:/etc/letsencrypt
       - ./certbot/www:/var/www/certbot
    depends_on:
      - web_app
    networks:
      - mynetwork
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  web_app:
    container_name: web_app
    build: .
    command: sh -c "test -d static || mkdir static && python manage.py collectstatic --noinput && gunicorn 'gTeamProject.wsgi:application' --bind=0.0.0.0:8000 --reload"
    ports:
      - 8000:8000
    depends_on:
      - celery
      - rabbit
      - redis
    networks:
      - mynetwork
    volumes:
      - ./:/usr/src/app

  celery:
    container_name: celery_worker
    build: .
    command: sh -c "celery -A celery_worker worker --loglevel=info"
    depends_on:
      - rabbit
      - redis
    networks:
      - mynetwork
    volumes:
      - ./celery_worker:/usr/src/app/celery_worker

  rabbit:
    container_name: rabbitmq
    image: rabbitmq:3-management
    hostname: rabbit
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mynetwork

  redis:
    container_name: redis
    image: redis:latest
    hostname: redis
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
